{{- if .Values.grafana.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ultra-logging-engine.fullname" . }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ultra-logging-engine.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  {{- if not (and .Values.grafana.autoscaling .Values.grafana.autoscaling.enabled) }}
  replicas: {{ .Values.grafana.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ultra-logging-engine.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      {{- with .Values.grafana.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ultra-logging-engine.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      {{- with .Values.grafana.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ultra-logging-engine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: grafana
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ultra-logging-engine.fullname" . }}-grafana-secret
                  key: admin-password
            - name: GF_INSTALL_PLUGINS
              value: "redis-datasource,kafka-datasource"
            - name: GF_SERVER_ROOT_URL
              value: "{{ .Values.grafana.ingress.protocol | default "http" }}://{{ (index .Values.grafana.ingress.hosts 0).host }}{{ (index (index .Values.grafana.ingress.hosts 0).paths 0).path | default "/" }}"
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: grafana-storage
          {{- if .Values.grafana.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "ultra-logging-engine.fullname" . }}-grafana-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: grafana-config
          configMap:
            name: {{ include "ultra-logging-engine.fullname" . }}-grafana-datasources
        - name: grafana-dashboards-config
          configMap:
            name: {{ include "ultra-logging-engine.fullname" . }}-grafana-dashboards-config
        - name: grafana-dashboards
          configMap:
            name: {{ include "ultra-logging-engine.fullname" . }}-grafana-dashboards
      {{- with .Values.grafana.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.grafana.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.grafana.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
